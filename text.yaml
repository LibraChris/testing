{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #cloud-config\
autoinstall:\
  version: 1\
  source:\
    id: ubuntu-desktop\
\
  locale: en_US.UTF-8\
  keyboard:\
    layout: de\
  timezone: Europe/Berlin\
\
  storage:\
    layout:\
      name: lvm\
      sizing-policy: all\
\
  network:\
    version: 2\
    ethernets:\
      ens33:\
        dhcp4: true\
        dhcp6: true\
\
  identity:\
    username: csb_admin\
    hostname: localhost\
    password: "csbadmin@root..123"  # Plaintext password for csb_admin\
\
  drivers:\
    install: true\
\
  ssh:\
    install-server: true\
    allow-pw: false\
    authorized-keys:\
      - ssh-rsa AAAAB3...\
\
  user-data:\
    users:\
      - name: csb_user\
        shell: /bin/bash\
        lock_passwd: false\
        passwd: "csb..123"  # Plaintext password for csb_user\
        groups: users\
        ssh_authorized_keys:\
          - ssh-rsa AAAAB3...\
\
      - name: csb_admin\
        shell: /bin/bash\
        lock_passwd: false\
        sudo: "ALL=(ALL) NOPASSWD:ALL"\
        groups: sudo\
        passwd: "csbadmin@root..123"  # Plaintext password for csb_admin\
        ssh_authorized_keys:\
          - ssh-rsa AAAAB3...\
\
    runcmd:\
      - |\
        export PATH=$PATH:/snap/bin\
        for user in csb_user csb_admin; do\
          sudo -u $user code --install-extension ms-dotnettools.dotnet-interactive-vscode\
          sudo -u $user code --install-extension ms-vscode-remote.remote-containers\
        done\
\
      - |\
        for user in csb_user csb_admin; do\
          usermod -aG docker $user\
        done\
\
      - |\
        mkdir -p /opt/ARCitect\
        LATEST_URL=$(curl -s https://api.github.com/repos/nfdi4plants/ARCitect/releases/latest | grep browser_download_url | grep AppImage | cut -d '"' -f 4)\
        if [ -n "$LATEST_URL" ]; then\
          wget -O /opt/ARCitect/ARCitect.AppImage "$LATEST_URL"\
          chmod +x /opt/ARCitect/ARCitect.AppImage\
          cd /opt/ARCitect\
          ./ARCitect.AppImage --appimage-extract\
          chown root:root squashfs-root/chrome-sandbox\
          chmod 4755 squashfs-root/chrome-sandbox\
          echo '#!/bin/bash' > /usr/local/bin/ARCitect\
          echo '/opt/ARCitect/squashfs-root/AppRun "$@"' >> /usr/local/bin/ARCitect\
          chmod +x /usr/local/bin/ARCitect\
          chmod -R a+rx /opt/ARCitect\
        else\
          echo "Konnte die neueste Version von ARCitect nicht finden."\
          exit 1\
        fi\
\
      - |\
        for user in csb_user csb_admin; do\
          chage -d 0 $user\
        done\
\
  packages:\
    - git\
    - git-lfs\
    - python3-pip\
    - net-tools\
    - libfuse2\
    - curl\
\
  snaps:\
    -}