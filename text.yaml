#cloud-config
autoinstall:
  version: 1
  source:
    id: ubuntu-desktop

  locale: en_US.UTF-8
  keyboard:
    layout: de
  timezone: Europe/Berlin

  storage:
    layout:
      name: lvm
      sizing-policy: all

  network:
    version: 2
    ethernets:
      ens33:
        dhcp4: true
        dhcp6: true

  identity:
    username: csb_admin
    hostname: localhost
    password: "csbadmin@root..123"  # Plaintext password for csb_admin

  drivers:
    install: true

  ssh:
    install-server: true
    allow-pw: false
    authorized-keys:
      - ssh-rsa AAAAB3...

  user-data:
    users:
      - name: csb_user
        shell: /bin/bash
        lock_passwd: false
        passwd: "csb..123"  # Plaintext password for csb_user
        groups: users
        ssh_authorized_keys:
          - ssh-rsa AAAAB3...

      - name: csb_admin
        shell: /bin/bash
        lock_passwd: false
        sudo: "ALL=(ALL) NOPASSWD:ALL"
        groups: sudo
        passwd: "csbadmin@root..123"  # Plaintext password for csb_admin
        ssh_authorized_keys:
          - ssh-rsa AAAAB3...

    runcmd:
      - |
        export PATH=$PATH:/snap/bin
        for user in csb_user csb_admin; do
          sudo -u $user code --install-extension ms-dotnettools.dotnet-interactive-vscode
          sudo -u $user code --install-extension ms-vscode-remote.remote-containers
        done

      - |
        for user in csb_user csb_admin; do
          usermod -aG docker $user
        done

      - |
        mkdir -p /opt/ARCitect
        LATEST_URL=$(curl -s https://api.github.com/repos/nfdi4plants/ARCitect/releases/latest | grep browser_download_url | grep AppImage | cut -d '"' -f 4)
        if [ -n "$LATEST_URL" ]; then
          wget -O /opt/ARCitect/ARCitect.AppImage "$LATEST_URL"
          chmod +x /opt/ARCitect/ARCitect.AppImage
          cd /opt/ARCitect
          ./ARCitect.AppImage --appimage-extract
          chown root:root squashfs-root/chrome-sandbox
          chmod 4755 squashfs-root/chrome-sandbox
          echo '#!/bin/bash' > /usr/local/bin/ARCitect
          echo '/opt/ARCitect/squashfs-root/AppRun "$@"' >> /usr/local/bin/ARCitect
          chmod +x /usr/local/bin/ARCitect
          chmod -R a+rx /opt/ARCitect
        else
          echo "Konnte die neueste Version von ARCitect nicht finden."
          exit 1
        fi

      - |
        for user in csb_user csb_admin; do
          chage -d 0 $user
        done

  packages:
    - git
    - git-lfs
    - python3-pip
    - net-tools
    - libfuse2
    - curl

  snaps:
    - name: pycharm-community
      channel: stable
      classic: true
    - name: code
      channel: stable
      classic: true

  late-commands:
    - |
      curtin in-target --target=/target -- bash -c '
        apt-get update && \
        apt-get install -y dotnet-sdk-8.0 && \
        apt-get install -y aspnetcore-runtime-8.0
      '
    - |
      curtin in-target --target=/target -- bash -c '
        apt-get remove -y docker docker-engine docker.io containerd runc || true
        apt-get update
        apt-get install -y ca-certificates curl gnupg lsb-release
        mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        apt-get update
        apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        systemctl enable docker
        systemctl start docker
      '